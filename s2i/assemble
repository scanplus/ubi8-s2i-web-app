#!/bin/bash

set -e

# Check to see if there is a node_modules folder
if [ "$(ls -A /tmp/src/node_modules)" ]; then
	echo "---> Removing the node_modules folder"
	rm -rf /tmp/src/node_modules
fi

chmod 775 -R /tmp/src/.

echo "---> Installing application source"
cp -Rfp /tmp/src/. ./

if [ ! -z $HTTP_PROXY ]; then
	echo "---> Setting npm http proxy to $HTTP_PROXY"
	npm config set proxy $HTTP_PROXY
fi

if [ ! -z $http_proxy ]; then
	echo "---> Setting npm http proxy to $http_proxy"
	npm config set proxy $http_proxy
fi

if [ ! -z $HTTPS_PROXY ]; then
	echo "---> Setting npm https proxy to $HTTPS_PROXY"
	npm config set https-proxy $HTTPS_PROXY
fi

if [ ! -z $https_proxy ]; then
	echo "---> Setting npm https proxy to $https_proxy"
	npm config set https-proxy $https_proxy
fi

if [ ! -z $NO_PROXY ]; then
	echo "---> Setting npm no proxy config to $NO_PROXY"
	npm config set no-proxy $NO_PROXY
fi

if [ ! -z $no_proxy ]; then
	echo "---> Setting npm no proxy config to $no_proxy"
	npm config set no-proxy $no_proxy
fi

# Change the npm registry mirror if provided
if [ ! -z "$NPM_MIRROR" ]; then
	echo "---> Setting the npm package mirror to $NPM_MIRROR"
	npm config set registry $NPM_MIRROR
fi

if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/node_modules ./
fi

echo "---> Building your Web Application from source"
echo -e "Current git config"
git config --list
if [ ! -z "$YARN_ENABLED" ]; then
	echo "---> Using 'yarn install' with YARN_ARGS"
	npx yarn install $YARN_ARGS
	$YARN_BUILD
else
	echo "---> Installing dependencies"
	echo "---> Using 'npm install'"
	npm install -s --loglevel verbose
	$NPM_BUILD
	# npm run build
	echo "---> Cleaning up npm cache"
	rm -rf .npm
fi

echo "----> moving built web application to /opt/app-root/output"
# Need to remove the output directory first
rm -rf /opt/app-root/output

# Recreate the directory
mkdir -p /opt/app-root/output

# Move the files from our apps output directory to the common output directory
mv ./$OUTPUT_DIR/* /opt/app-root/output


# echo "---> Building and Installing Web Application from source..."
# Need to figure out the best way to copy the user defined things to the chained image
# Or maybe we don't worry about it and that gets fed to the nginx image somehow
# Or maybe it doesn't matter since there could possibly be another layer of abstraction on top of that?
# if [ -f /tmp/src/nginx.conf ]; then
#   mv /tmp/src/nginx.conf /etc/nginx/nginx.conf
# fi

echo "---> Fix permissions on app-root"
fix-permissions /opt/app-root
